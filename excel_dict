Option Explicit

' Predefined new headers
Public arrNewHeaders As Variant

Sub ProcessData()
    arrNewHeaders = Array("device name", "console server", "console port", "monitor switch", "monitor port", "oob mgmt port", "upstream device", "upstream port")
    
    ' Get the selected range
    Dim rng As Range
    On Error Resume Next
    Set rng = Selection
    On Error GoTo 0
    
    If rng Is Nothing Then
        MsgBox "Please select a range first, then click the button again.", vbExclamation
        Exit Sub
    End If
    
    ' Read headers
    Dim headers As Variant
    headers = GetHeaders(rng)
    
    ' Map headers
    Dim mappedHeaders As Object
    Set mappedHeaders = MapHeaders(headers)
    
    ' Process data
    Dim deviceDict As Object
    Set deviceDict = ProcessDevices(rng, mappedHeaders)
    
    ' Display results
    DisplayResults deviceDict
End Sub

Function GetHeaders(rng As Range) As Variant
    GetHeaders = Application.Transpose(Application.Transpose(rng.Rows(1).Value))
End Function

Function MapHeaders(headers As Variant) As Object
    Dim mappedHeaders As Object
    Set mappedHeaders = CreateObject("Scripting.Dictionary")
    
    Dim i As Integer
    For i = LBound(headers) To UBound(headers)
        Dim newHeader As String
        newHeader = InputBox("Map '" & headers(i) & "' to which new header?" & vbNewLine & _
                             "Options: " & Join(arrNewHeaders, ", "), _
                             "Map Header", "")
        
        If newHeader <> "" Then
            mappedHeaders.Add headers(i), newHeader
        End If
    Next i
    
    Set MapHeaders = mappedHeaders
End Function

Function ProcessDevices(rng As Range, mappedHeaders As Object) As Object
    Dim deviceDict As Object
    Set deviceDict = CreateObject("Scripting.Dictionary")
    
    Dim i As Long
    Dim deviceName As String
    Dim attr As Variant
    
    For i = 2 To rng.Rows.Count ' Assuming first row is header
        deviceName = rng.Cells(i, mappedHeaders("device name")).Value
        
        If Not deviceDict.Exists(deviceName) Then
            Dim deviceInfo As Object
            Set deviceInfo = CreateObject("Scripting.Dictionary")
            
            For Each attr In mappedHeaders.Keys
                deviceInfo.Add mappedHeaders(attr), rng.Cells(i, rng.Rows(1).Find(attr, LookAt:=xlWhole).Column).Value
            Next attr
            
            deviceDict.Add deviceName, deviceInfo
        End If
    Next i
    
    Set ProcessDevices = deviceDict
End Function

Sub DisplayResults(deviceDict As Object)
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets.Add
    
    ' Write headers
    ws.Cells(1, 1).Value = "Device Name"
    Dim i As Integer
    i = 2
    Dim attr As Variant
    For Each attr In arrNewHeaders
        ws.Cells(1, i).Value = attr
        i = i + 1
    Next attr
    
    ' Write data
    Dim row As Long
    row = 2
    Dim deviceName As Variant
    For Each deviceName In deviceDict.Keys
        ws.Cells(row, 1).Value = deviceName
        i = 2
        For Each attr In arrNewHeaders
            If deviceDict(deviceName).Exists(attr) Then
                ws.Cells(row, i).Value = deviceDict(deviceName)(attr)
            End If
            i = i + 1
        Next attr
        row = row + 1
    Next deviceName
    
    ws.UsedRange.Columns.AutoFit
    MsgBox "Results have been written to a new worksheet.", vbInformation
End Sub
